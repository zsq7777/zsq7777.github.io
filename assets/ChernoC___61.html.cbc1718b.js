import{_ as n,f as s}from"./app.1f76b4a4.js";const a={},e=s(`<h1 id="_61-c-\u7684\u540D\u79F0\u7A7A\u95F4-\u547D\u540D\u7A7A\u95F4-namespace" tabindex="-1"><a class="header-anchor" href="#_61-c-\u7684\u540D\u79F0\u7A7A\u95F4-\u547D\u540D\u7A7A\u95F4-namespace" aria-hidden="true">#</a> 61. C++\u7684\u540D\u79F0\u7A7A\u95F4/\u547D\u540D\u7A7A\u95F4 namespace</h1><p>namespace\u672C\u8D28\u4F5C\u7528\u662F\u9632\u6B62\u51FD\u6570\u547D\u540D\u51B2\u7A81\uFF0C\u800C\u5728C\u4E2D\u6CA1\u6709namespace\uFF0C\u533A\u5206\u7684\u65B9\u6CD5\u5C31\u662F\u8BA9\u51FD\u6570\u540D\u90FD\u662F\u552F\u4E00\u7684\u3002</p><h2 id="\u547D\u540D\u7A7A\u95F4" tabindex="-1"><a class="header-anchor" href="#\u547D\u540D\u7A7A\u95F4" aria-hidden="true">#</a> \u547D\u540D\u7A7A\u95F4</h2><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>namespace MyPrint <span class="token punctuation">{</span>
    
	<span class="token keyword">void</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token keyword">const</span> std<span class="token operator">::</span>string<span class="token operator">&amp;</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> msg <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="\u5D4C\u5957\u547D\u540D\u7A7A\u95F4" tabindex="-1"><a class="header-anchor" href="#\u5D4C\u5957\u547D\u540D\u7A7A\u95F4" aria-hidden="true">#</a> \u5D4C\u5957\u547D\u540D\u7A7A\u95F4</h2><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>namespace MyPrint <span class="token punctuation">{</span>
	namespace function <span class="token punctuation">{</span>
		<span class="token keyword">void</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token keyword">const</span> std<span class="token operator">::</span>string<span class="token operator">&amp;</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> msg <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="c-17\u4E2D\u652F\u6301\u7684\u547D\u540D\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#c-17\u4E2D\u652F\u6301\u7684\u547D\u540D\u65B9\u6CD5" aria-hidden="true">#</a> C++17\u4E2D\u652F\u6301\u7684\u547D\u540D\u65B9\u6CD5</h2><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>namespace MyPrint<span class="token operator">::</span>function <span class="token punctuation">{</span>
		<span class="token keyword">void</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token keyword">const</span> std<span class="token operator">::</span>string<span class="token operator">&amp;</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> msg <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="\u5C06\u547D\u540D\u7A7A\u95F4\u4F5C\u4E3A\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#\u5C06\u547D\u540D\u7A7A\u95F4\u4F5C\u4E3A\u53D8\u91CF" aria-hidden="true">#</a> \u5C06\u547D\u540D\u7A7A\u95F4\u4F5C\u4E3A\u53D8\u91CF</h2><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>	<span class="token keyword">typedef</span> <span class="token keyword">void</span><span class="token punctuation">(</span><span class="token operator">*</span>Function<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">const</span> std<span class="token operator">::</span>string<span class="token operator">&amp;</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
	namespace a <span class="token operator">=</span> MyPrint<span class="token operator">::</span>function<span class="token punctuation">;</span>
	Function f <span class="token operator">=</span> a<span class="token operator">::</span>print<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="using-namespace" tabindex="-1"><a class="header-anchor" href="#using-namespace" aria-hidden="true">#</a> using namespace</h2><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>	using namespace MyPrint<span class="token operator">::</span>function<span class="token punctuation">;</span>

	<span class="token keyword">typedef</span> <span class="token keyword">void</span><span class="token punctuation">(</span><span class="token operator">*</span>Function<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">const</span> std<span class="token operator">::</span>string<span class="token operator">&amp;</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
	Function f <span class="token operator">=</span>print<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u6C38\u8FDC\u4E0D\u8981\u5728\u5934\u6587\u4EF6\u4E2D\u4F7F\u7528 using namespace \uFF0C\u8FD9\u8BA9namespace\u672C\u8EAB\u7684\u8BBE\u8BA1\u5931\u53BB\u610F\u4E49\u3002</p>`,14);function p(t,c){return e}var r=n(a,[["render",p]]);export{r as default};
