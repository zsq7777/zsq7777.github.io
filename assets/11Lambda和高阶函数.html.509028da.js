import{_ as n,f as s}from"./app.fd59a98b.js";const a={},p=s(`<h1 id="_11-lambda\u548C\u9AD8\u9636\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_11-lambda\u548C\u9AD8\u9636\u51FD\u6570" aria-hidden="true">#</a> 11. Lambda\u548C\u9AD8\u9636\u51FD\u6570</h1><h2 id="_1-lambda" tabindex="-1"><a class="header-anchor" href="#_1-lambda" aria-hidden="true">#</a> 1. lambda</h2><p>\u672C\u8D28\u4E0A\u5C31\u662F\u533F\u540D\u51FD\u6570</p><h3 id="_1-1-java\u98CE\u683C\u7684\u533F\u540D\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_1-1-java\u98CE\u683C\u7684\u533F\u540D\u51FD\u6570" aria-hidden="true">#</a> 1.1 java\u98CE\u683C\u7684\u533F\u540D\u51FD\u6570</h3><h4 id="java\u98CE\u683C\u7684" tabindex="-1"><a class="header-anchor" href="#java\u98CE\u683C\u7684" aria-hidden="true">#</a> java\u98CE\u683C\u7684</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>
    <span class="token keyword">interface</span> <span class="token class-name">Printer</span><span class="token punctuation">{</span>
        <span class="token keyword">abstract</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printAll</span><span class="token punctuation">(</span><span class="token class-name">Printer</span> printer<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u884C\u9996&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        printer<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u884C\u5C3E&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">printAll</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u884C\u4E2D&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h4 id="kotlin\u4E2D\u4F7F\u7528java\u98CE\u683C\u7684\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#kotlin\u4E2D\u4F7F\u7528java\u98CE\u683C\u7684\u5B9E\u73B0" aria-hidden="true">#</a> kotlin\u4E2D\u4F7F\u7528java\u98CE\u683C\u7684\u5B9E\u73B0</h4><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">interface</span> Pinter<span class="token punctuation">{</span>
   <span class="token keyword">abstract</span> <span class="token keyword">fun</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">fun</span> <span class="token function">test</span><span class="token punctuation">(</span>p<span class="token operator">:</span>Pinter<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;\u884C\u9996&quot;</span></span><span class="token punctuation">)</span>
    p<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;\u884C\u5C3E&quot;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">object</span> <span class="token operator">:</span>Pinter<span class="token punctuation">{</span>
       <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;\u884C\u4E2D&quot;</span></span><span class="token punctuation">)</span>
       <span class="token punctuation">}</span>
   <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="_1-2-kotlin\u4E2D-lambda\u7684\u683C\u5F0F" tabindex="-1"><a class="header-anchor" href="#_1-2-kotlin\u4E2D-lambda\u7684\u683C\u5F0F" aria-hidden="true">#</a> 1.2 kotlin\u4E2D lambda\u7684\u683C\u5F0F</h3><p>{x:Int-&gt;&quot;\u8FD4\u56DE\u503C&quot;}</p><p>\u8FD9\u662F\u6700\u57FA\u672C\u7684\u683C\u5F0F</p><p>x\u8868\u793A\u5165\u53C2\uFF0C&quot;\u8FD4\u56DE\u503C&quot;\u8868\u793A\u51FD\u6570\u4E3B\u9898\uFF0C}\u524D\u7684\u6700\u540E\u4E00\u884C\u9ED8\u8BA4\u4E3A\u8FD4\u56DE\u503C</p><p>lambda\u8868\u8FBE\u5F0F\u662F\u8868\u8FBE\u51FD\u6570\u7684\u65B9\u5F0F\uFF0C\u800C\u4E00\u4E2A\u533F\u540D\u51FD\u6570\u901A\u5E38\u7531\u53C2\u6570\uFF0C\u51FD\u6570\u4F53\uFF0C\u8FD4\u56DE\u503C\u7EC4\u6210\u3002</p><h4 id="_1-2-1-\u533F\u540D\u51FD\u6570\u7684\u7C7B\u578B\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#_1-2-1-\u533F\u540D\u51FD\u6570\u7684\u7C7B\u578B\u58F0\u660E" aria-hidden="true">#</a> 1.2.1 \u533F\u540D\u51FD\u6570\u7684\u7C7B\u578B\u58F0\u660E</h4><p>\u51FD\u6570\u4E5F\u662F\u4E00\u79CD\u7C7B\u578B\uFF0C\u5C31\u50CF\u666E\u901A\u7684\u7C7B\uFF0C\u6216\u662F\u57FA\u672C\u6570\u636E\u7C7B</p><h5 id="\u58F0\u660E\u5165\u53C2-\u8FD4\u56DE\u503C\u7684\u51FD\u6570\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u58F0\u660E\u5165\u53C2-\u8FD4\u56DE\u503C\u7684\u51FD\u6570\u7C7B\u578B" aria-hidden="true">#</a> \u58F0\u660E\u5165\u53C2,\u8FD4\u56DE\u503C\u7684\u51FD\u6570\u7C7B\u578B</h5><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code>    <span class="token keyword">val</span> sum<span class="token operator">:</span><span class="token punctuation">(</span>x<span class="token operator">:</span>Int<span class="token punctuation">)</span><span class="token operator">-&gt;</span>String
    <span class="token keyword">val</span> sum<span class="token operator">:</span><span class="token punctuation">(</span><span class="token punctuation">(</span>Int<span class="token punctuation">)</span><span class="token operator">-&gt;</span>Int<span class="token punctuation">)</span><span class="token operator">?</span> <span class="token comment">//\u5F53\u7136\u7531\u4E8E\u5B83\u662F\u4E00\u4E2A\u7C7B\u578B\uFF0C\u6211\u4E5F\u53EF\u4EE5\u8BA4\u4E3A\u4ED6\u662F\u53EF\u7A7A\u7684</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u8FD4\u56DE\u503C\u4E3A\u7A7A\u7684\u51FD\u6570</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code>   <span class="token keyword">val</span> show <span class="token operator">:</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span><span class="token operator">-&gt;</span>Unit
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h5 id="\u5B9E\u73B0\u8BE5\u51FD\u6570\u7684\u51FD\u6570\u4F53" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u8BE5\u51FD\u6570\u7684\u51FD\u6570\u4F53" aria-hidden="true">#</a> \u5B9E\u73B0\u8BE5\u51FD\u6570\u7684\u51FD\u6570\u4F53</h5><p>\u5165\u53C2x:Int,y:Int\uFF0C\u8FD4\u56DEstring\u7684\u4ED6\u4EEC\u7684\u548C</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code>  <span class="token keyword">val</span> sum<span class="token operator">:</span><span class="token punctuation">(</span>x<span class="token operator">:</span>Int<span class="token punctuation">,</span>y<span class="token operator">:</span>Int<span class="token punctuation">)</span><span class="token operator">-&gt;</span>String <span class="token operator">=</span> <span class="token punctuation">{</span>x<span class="token punctuation">,</span>y<span class="token operator">-&gt;</span>
        <span class="token string-literal singleline"><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">x<span class="token operator">+</span>y</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5165\u53C2String\uFF0C\u8FD4\u56DE\u7A7A\uFF0C\u5728\u51FD\u6570\u4F53\u91CC\u6253\u5370</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code>   <span class="token keyword">val</span> show <span class="token operator">:</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span><span class="token operator">-&gt;</span>Unit
    show<span class="token operator">=</span><span class="token punctuation">{</span>it<span class="token operator">-&gt;</span> <span class="token function">println</span><span class="token punctuation">(</span>it<span class="token punctuation">)</span> <span class="token punctuation">}</span>
    <span class="token function">show</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;\u82CF\u4F1F\u82CF\u4F1F\u82CF\u4F1F&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h5 id="\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B" aria-hidden="true">#</a> \u793A\u4F8B</h5><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">val</span> onDay<span class="token operator">:</span> <span class="token punctuation">(</span>bug<span class="token operator">:</span> Boolean<span class="token punctuation">,</span> eat<span class="token operator">:</span> Boolean<span class="token punctuation">,</span> sleep<span class="token operator">:</span> Boolean<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit
    <span class="token keyword">val</span> bug<span class="token operator">:</span> <span class="token punctuation">(</span>isFinash<span class="token operator">:</span> Boolean<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Boolean <span class="token operator">=</span> <span class="token punctuation">{</span> it <span class="token operator">-&gt;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>it<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;\u7EC8\u4E8E\u4FEE\u590D\u5B8C\u4E86&quot;</span></span><span class="token punctuation">)</span>
            <span class="token boolean">true</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;\u6CA1\u4FEE\u590D\u5B8C\uFF0C\u5BA2\u6237\u75DB\u82E6\uFF0C\u9886\u5BFC\u8981\u5D14&quot;</span></span><span class="token punctuation">)</span>
            <span class="token boolean">false</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">val</span> eat<span class="token operator">:</span> <span class="token punctuation">(</span>isDelicious<span class="token operator">:</span> Boolean<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Boolean <span class="token operator">=</span> <span class="token punctuation">{</span> it <span class="token operator">-&gt;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>it<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;\u4ECA\u5929\u7684\u5FEB\u9910\u5F88\u7F8E\u5473&quot;</span></span><span class="token punctuation">)</span>
                <span class="token boolean">true</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;\u53EF\u80FD\u53A8\u5B50\u4ECA\u5929\u5FC3\u60C5\u4E0D\u597D&quot;</span></span><span class="token punctuation">)</span>
                <span class="token boolean">false</span>
            <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">val</span> sleep<span class="token operator">:</span> <span class="token punctuation">(</span>isQuiet<span class="token operator">:</span> Boolean<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Boolean <span class="token operator">=</span> <span class="token punctuation">{</span>
        it<span class="token operator">-&gt;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>it<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>it<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;\u7A97\u5916\u5F88\u5B89\u9759\uFF0C\u7761\u4E86\u4E2A\u597D\u89C9&quot;</span></span><span class="token punctuation">)</span>
                <span class="token boolean">true</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;\u697C\u4E0B\u6572\u9523\u6253\u9F13\u529E\u8D77\u4E86\u4E27\u4E8B\u6216\u662F\u559C\u4E8B,\u6211\u53EA\u89C9\u5F97\u4ED6\u4EEC\u5435\u95F9&quot;</span></span><span class="token punctuation">)</span>
                <span class="token boolean">false</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;\u8FD8\u6CA1\u7761\u5462&quot;</span></span><span class="token punctuation">)</span>
            <span class="token boolean">false</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
    onDay<span class="token operator">=</span> <span class="token punctuation">{</span>bug<span class="token punctuation">,</span>eat<span class="token punctuation">,</span>sleep<span class="token operator">-&gt;</span>
        <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;\u4E8B\u60C5\u7684\u6210\u529F\u4E0E\u5426\u4EFF\u4F5B\u5E76\u4E0D\u91CD\u8981&quot;</span></span><span class="token punctuation">)</span>
        <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;\u4E00\u5929\u4FBF\u5982\u6B64\u8FC7\u53BB\uFF0C\u6211\u5F00\u59CB\u6000\u7591\u81EA\u5DF1\u7684\u5B58\u5728\u7684\u610F\u4E49&quot;</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">onDay</span><span class="token punctuation">(</span><span class="token function">bug</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">eat</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><h2 id="_2-\u9AD8\u9636\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_2-\u9AD8\u9636\u51FD\u6570" aria-hidden="true">#</a> 2. \u9AD8\u9636\u51FD\u6570</h2><p>\u5C06\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\u6216\u8FD4\u56DE\u503C\u7684\u51FD\u6570\u88AB\u79F0\u4E3A\u9AD8\u9636\u51FD\u6570\u3002</p><h3 id="_2-1-\u5C06\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\u548C\u8FD4\u56DE\u503C" tabindex="-1"><a class="header-anchor" href="#_2-1-\u5C06\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\u548C\u8FD4\u56DE\u503C" aria-hidden="true">#</a> 2.1 \u5C06\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\u548C\u8FD4\u56DE\u503C</h3><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">fun</span> <span class="token function">show</span><span class="token punctuation">(</span>lambda<span class="token operator">:</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span>String<span class="token punctuation">,</span>lambda1<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> String<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>Int<span class="token punctuation">)</span><span class="token operator">-&gt;</span>String <span class="token punctuation">{</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token function">lambda</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token function">lambda1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>it<span class="token operator">-&gt;</span><span class="token string-literal singleline"><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">it</span></span><span class="token string">&quot;</span></span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">val</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string-literal singleline"><span class="token string">&quot;\u8D75\u601D\u742A&quot;</span></span><span class="token punctuation">}</span>
    <span class="token keyword">val</span> b <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string-literal singleline"><span class="token string">&quot;\u8D75\u5A13\u96EA&quot;</span></span><span class="token punctuation">}</span>
     <span class="token function">println</span><span class="token punctuation">(</span><span class="token function">show</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="_2-2-\u4E3A\u5DF2\u5B58\u5728\u7684\u7C7B\u578B\u53D6\u522B\u540D" tabindex="-1"><a class="header-anchor" href="#_2-2-\u4E3A\u5DF2\u5B58\u5728\u7684\u7C7B\u578B\u53D6\u522B\u540D" aria-hidden="true">#</a> 2.2 \u4E3A\u5DF2\u5B58\u5728\u7684\u7C7B\u578B\u53D6\u522B\u540D</h3><p>\u7C7B\u578B\u522B\u540D\uFF0C\u53EF\u4EE5\u4E3A\u4EFB\u610F\u7C7B\u578B\u53D6\u4E00\u4E2A\u522B\u540D\uFF0C \u53EA\u80FD\u662F<strong>\u9876\u7EA7\u7684(Top-Level Only)</strong></p><p>\u4E0D\u80FD\u5B58\u5728\u4E8E\u7C7B\uFF0C\u63A5\u53E3\uFF0C\u51FD\u6570\u7B49\u4E2D\u3002</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code>    <span class="token keyword">typealias</span> type <span class="token operator">=</span> <span class="token punctuation">(</span>Int<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Int
    <span class="token keyword">typealias</span> onTypeString<span class="token operator">=</span>String
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,34);function t(e,o){return p}var c=n(a,[["render",t]]);export{c as default};
