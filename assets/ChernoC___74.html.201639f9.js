import{_ as n,f as s}from"./app.6bf1f908.js";const a={},p=s(`<h1 id="_74-c-\u7684\u57FA\u51C6\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#_74-c-\u7684\u57FA\u51C6\u6D4B\u8BD5" aria-hidden="true">#</a> 74. C++\u7684\u57FA\u51C6\u6D4B\u8BD5</h1><p>\u6D4B\u91CFC++\u4EE3\u7801\u7684\u6027\u80FD</p><p>debug\u548Crelease\uFF0C\u4E0D\u540C\u7684\u7F16\u8BD1\u6A21\u5F0F\u4E0B\u57FA\u51C6\u6D4B\u8BD5\u7684\u7ED3\u679C\u4F1A\u4E0D\u540C\uFF0Crelease\u4F1A\u53BB\u9664\u591A\u4F59\u7684\u4E1C\u897F\u3002</p><h2 id="\u4EE3\u7801\u8FD0\u884C\u65F6\u95F4\u8BA1\u65F6-\u57FA\u672C\u5DE5\u4F5C\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u8FD0\u884C\u65F6\u95F4\u8BA1\u65F6-\u57FA\u672C\u5DE5\u4F5C\u539F\u7406" aria-hidden="true">#</a> \u4EE3\u7801\u8FD0\u884C\u65F6\u95F4\u8BA1\u65F6\uFF0C \u57FA\u672C\u5DE5\u4F5C\u539F\u7406</h2><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;pch.h&quot;</span></span>

class Timer <span class="token punctuation">{</span>
private<span class="token operator">:</span>
	std<span class="token operator">::</span>chrono<span class="token operator">::</span>time_point<span class="token operator">&lt;</span>std<span class="token operator">::</span>chrono<span class="token operator">::</span>high_resolution_clock<span class="token operator">&gt;</span> m_StartTimepoint<span class="token punctuation">;</span>
public<span class="token operator">:</span>
	<span class="token function">Timer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		m_StartTimepoint <span class="token operator">=</span> std<span class="token operator">::</span>chrono<span class="token operator">::</span>high_resolution_clock<span class="token operator">::</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token operator">~</span><span class="token function">Timer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">void</span> <span class="token function">Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">auto</span> endTimePoint <span class="token operator">=</span> std<span class="token operator">::</span>chrono<span class="token operator">::</span>high_resolution_clock<span class="token operator">::</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">auto</span> start <span class="token operator">=</span> std<span class="token operator">::</span>chrono<span class="token operator">::</span>time_point_cast<span class="token operator">&lt;</span>std<span class="token operator">::</span>chrono<span class="token operator">::</span>microseconds<span class="token operator">&gt;</span><span class="token punctuation">(</span>m_StartTimepoint<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">time_since_epoch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u8F6C\u6362\u4E3A\u5FAE\u79D2</span>
		<span class="token keyword">auto</span> end <span class="token operator">=</span> std<span class="token operator">::</span>chrono<span class="token operator">::</span>time_point_cast<span class="token operator">&lt;</span>std<span class="token operator">::</span>chrono<span class="token operator">::</span>microseconds<span class="token operator">&gt;</span><span class="token punctuation">(</span>endTimePoint<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">time_since_epoch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u8F6C\u6362\u4E3A\u5FAE\u79D2</span>
		<span class="token keyword">auto</span> duration <span class="token operator">=</span> end <span class="token operator">-</span> start<span class="token punctuation">;</span>
		<span class="token keyword">double</span> ms <span class="token operator">=</span> duration <span class="token operator">*</span> <span class="token number">0.001</span><span class="token punctuation">;</span> <span class="token comment">//\u8BA1\u7B97\u4E3A\u6BEB\u79D2</span>
		std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> duration <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u5FAE\u79D2&quot;</span> <span class="token operator">&lt;&lt;</span> ms <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\u6BEB\u79D2&quot;</span> <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>


<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>


	<span class="token keyword">int</span> value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token comment">//\u8FD9\u6837\u7684\u4EE3\u7801\u4F1A\u88AB\u7F16\u8BD1\u5668\u4F18\u5316</span>
	<span class="token punctuation">{</span>
		Timer timer<span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			value <span class="token operator">+=</span> <span class="token number">10</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> value <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>


<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div>`,5);function t(o,e){return p}var l=n(a,[["render",t]]);export{l as default};
