import{_ as s,f as n}from"./app.601cf996.js";const a={},e=n(`<h1 id="_37-c-\u7684\u4E09\u5143\u64CD\u4F5C\u7B26" tabindex="-1"><a class="header-anchor" href="#_37-c-\u7684\u4E09\u5143\u64CD\u4F5C\u7B26" aria-hidden="true">#</a> 37. C++\u7684\u4E09\u5143\u64CD\u4F5C\u7B26</h1><h2 id="\u4E09\u5143\u64CD\u4F5C\u7B26" tabindex="-1"><a class="header-anchor" href="#\u4E09\u5143\u64CD\u4F5C\u7B26" aria-hidden="true">#</a> \u4E09\u5143\u64CD\u4F5C\u7B26</h2><p>\u4EE3\u7801\u793A\u4F8B</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span> </span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>

<span class="token keyword">static</span> <span class="token keyword">int</span> s_Level <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

 <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	 s_Level <span class="token operator">=</span> s_Level <span class="token operator">&lt;</span> <span class="token number">5</span> <span class="token operator">?</span> <span class="token number">10</span> <span class="token operator">:</span> <span class="token number">11</span><span class="token punctuation">;</span>
	 std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> s_Level <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u518D\u7ED3\u6784\u4E0A\u53EF\u4EE5\u66F4\u660E\u663E\u7684\u770B\u51FA\u662F\u5728\u5BF9s_Level\u8D4B\u503C\u3002</p><h2 id="\u4E09\u5143\u64CD\u4F5C\u7B26\u5D4C\u5957" tabindex="-1"><a class="header-anchor" href="#\u4E09\u5143\u64CD\u4F5C\u7B26\u5D4C\u5957" aria-hidden="true">#</a> \u4E09\u5143\u64CD\u4F5C\u7B26\u5D4C\u5957</h2><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span> </span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>

<span class="token keyword">static</span> <span class="token keyword">int</span> s_Level <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	 std<span class="token operator">::</span>string levelStr<span class="token punctuation">;</span>
	 levelStr <span class="token operator">=</span> s_Level <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span><span class="token punctuation">(</span> s_Level <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">&quot;\u65B0\u624B&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;\u5927\u795E&quot;</span> <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token string">&quot;\u65B0\u624B1&quot;</span><span class="token punctuation">;</span>
	 std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> levelStr <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u5C3D\u91CF\u4E0D\u8981\u505A\u4E09\u76EE\u8FD0\u7B97\u7B26\u5D4C\u5957</p>`,8);function p(t,o){return e}var c=s(a,[["render",p]]);export{c as default};
