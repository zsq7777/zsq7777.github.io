import{_ as n,f as a}from"./app.c9d61a15.js";const s={},p=a(`<h1 id="_45-c-\u7684\u590D\u5236\u4E0E\u62F7\u8D1D\u6784\u9020\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_45-c-\u7684\u590D\u5236\u4E0E\u62F7\u8D1D\u6784\u9020\u51FD\u6570" aria-hidden="true">#</a> 45. C++\u7684\u590D\u5236\u4E0E\u62F7\u8D1D\u6784\u9020\u51FD\u6570</h1><p>\u590D\u5236\u53EF\u4EE5\u7406\u89E3\u4E3A\u5185\u5B58\u62F7\u8D1D\uFF0CC++\u4E2D\u4F55\u65F6\u4F1A\u62F7\u8D1D\u3002</p><p>\u590D\u5236\u9700\u8981\u65F6\u95F4\uFF0C\u5E76\u4E14\u4E5F\u4F1A\u6D88\u8017\u5185\u5B58\u548C\u78C1\u76D8\uFF0C\u6D6A\u8D39\u6027\u80FD\u3002</p><p>\u601D\u8003\uFF1A \u4EC0\u4E48\u60C5\u51B5\u4E0B\u505A\u5185\u5B58\u62F7\u8D1D\uFF1F \u4EC0\u4E48\u60C5\u51B5\u4E0B\u53EA\u662F\u5BF9\u4E00\u4E2A\u5DF2\u5B58\u5728\u7684\u5BF9\u8C61\u505A\u8BFB\u53D6\u6216\u4FEE\u6539\uFF1F</p><h2 id="\u590D\u5236\u7684\u60C5\u51B5" tabindex="-1"><a class="header-anchor" href="#\u590D\u5236\u7684\u60C5\u51B5" aria-hidden="true">#</a> \u590D\u5236\u7684\u60C5\u51B5</h2><h3 id="\u590D\u5236-\u58F0\u660E\u4E14\u5B9A\u4E49\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#\u590D\u5236-\u58F0\u660E\u4E14\u5B9A\u4E49\u53D8\u91CF" aria-hidden="true">#</a> \u590D\u5236\uFF08\u58F0\u660E\u4E14\u5B9A\u4E49\u53D8\u91CF\uFF09</h3><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>    <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> b <span class="token operator">=</span> a<span class="token punctuation">;</span>
	a <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
	std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> b <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span> 
    <span class="token comment">// \u8F93\u51FA\uFF1Ab=1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u53EF\u4EE5\u770B\u51FA <code>int b=a</code> \u662F\u590D\u5236\u4E86a\u7684\u503C\u800C\u975E (\u5F15\u7528/\u6307\u5411a\u7684\u5185\u5B58)\u3002</p><h3 id="\u590D\u5236\u6307\u9488" tabindex="-1"><a class="header-anchor" href="#\u590D\u5236\u6307\u9488" aria-hidden="true">#</a> \u590D\u5236\u6307\u9488</h3><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>    <span class="token keyword">int</span><span class="token operator">*</span> a <span class="token operator">=</span> new <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span><span class="token operator">*</span> b <span class="token operator">=</span> a<span class="token punctuation">;</span>
	<span class="token operator">*</span>b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
	std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token operator">*</span>a <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\uFF08\u58F0\u660E\u4E14\u5B9A\u4E49\u53D8\u91CF\uFF09\u7684\u4E00\u79CD\u65B9\u6CD5\uFF0C\u4E0E\u4E0A\u4E0B\u6587\u65E0\u5173\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>    <span class="token keyword">struct</span> <span class="token class-name">MyStruct</span>
    <span class="token punctuation">{</span>
    	<span class="token keyword">float</span> x<span class="token punctuation">,</span> y<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    MyStruct a <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5BF9\u6307\u9488\u7684\u4FEE\u6539\u5E76\u4E0D\u4F1A\u5F71\u54CD\u6307\u5411\u7684\u5185\u5B58\u7684\u503C\uFF0C \u4F46\u662F\u5185\u5B58\u4FEE\u6539\u4F1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>    MyStruct<span class="token operator">*</span> a <span class="token operator">=</span> new <span class="token function">MyStruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	MyStruct<span class="token operator">*</span> b <span class="token operator">=</span> a<span class="token punctuation">;</span>
	<span class="token comment">//b++;  \u4FEE\u6539\u6307\u9488</span>
	b<span class="token operator">-&gt;</span>x <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>  <span class="token comment">//\u4FEE\u6539\u5185\u5B58\u4E2D\u7684\u503C</span>

	std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span> a<span class="token operator">-&gt;</span>x<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="\u5C0F\u8282\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u5C0F\u8282\u603B\u7ED3" aria-hidden="true">#</a> \u5C0F\u8282\u603B\u7ED3</h4><p>\u5728\u505A=\u64CD\u4F5C\u65F6\uFF0C\u8981\u5206\u6E05\u695A\u65F6\u5728\u590D\u5236\u6307\u9488\u8FD8\u662F\u5728\u590D\u5236\u5185\u5B58\u3002</p>`,16);function e(t,o){return p}var r=n(s,[["render",e]]);export{r as default};
